<!DOCTYPE html>
 <html lang="es" class="h-100">
 <head>
     <title>Dashboard | Asistencia Registro</title>
     <%- include('headers')%>
     <script src='https://unpkg.com/tooltip.js/dist/umd/tooltip.min.js'></script>
 </head>
 <body class="page bg-light d-flex flex-column h-100">
    <%- include('email') %> 
    <div class="d-flex" id="wrapper">
         <%- include('menuDashboard') %>
         <div id="page-content-wrapper">
            <%- include('headerDashboard') %>
            <div class="container-fluid py-4 bg-white ">
                <div class="d-flex justify-content-between pt-2 px-2 align-items-end bg-light rounded-3-top">
                    <h4 class="font-weight-bold px-2 mt-2">Registrar Asistencia</h4>
                </div>
                <div id="calendarModal"></div>
                <style>
                    .fc .fc-timegrid-col.fc-day-today{
                        background-color: #03ca8080 !important;
                    }
                    .fc .fc-daygrid-day.fc-day-today{
                        background-color: #03ca8080 !important;
                    }
                    .fc-timegrid-event .fc-event-main{
                        overflow: auto;
                    }
                    .fc-daygrid-event{
                        white-space: normal !important;
                        padding: 10px 15px;
                        border-radius: 10px;
                    }
                    .fc-daygrid-event-harness{
                        margin-bottom: 4px;
                    }
                    .fc .fc-toolbar.fc-header-toolbar{
                        background-color: #edf0ff;
                        padding: 15px;
                        margin: 0%;
                    }
                    .fc-toolbar-title{
                        font-size: 1rem !important;
                    }
                    .fc-col-header-cell {
                        padding: 20px 0 !important;
                    }
                    .fc-toolbar-title {
                        min-width: 260px !important;
                        display: block !important;
                    }
                </style>
            </div>
            <%- include('footerDashboard') %>
         </div>
     </div>
     <script>
        moment.lang('es', {
            months: 'Enero_Febrero_Marzo_Abril_Mayo_Junio_Julio_Agosto_Septiembre_Octubre_Noviembre_Diciembre'.split('_'),
            monthsShort: 'Enero._Feb._Mar_Abr._May_Jun_Jul._Ago_Sept._Oct._Nov._Dec.'.split('_'),
            weekdays: 'Domingo_Lunes_Martes_Miercoles_Jueves_Viernes_Sabado'.split('_'),
            weekdaysShort: 'Dom._Lun._Mar._Mier._Jue._Vier._Sab.'.split('_'),
            weekdaysMin: 'Do_Lu_Ma_Mi_Ju_Vi_Sa'.split('_'),
        }
        );
        function loaderDOMEvents(){
            loadEventsCalendar();
        }
        var g_asistenciaall = new Array();
        function loadEventsCalendar(){
            let bearer = 'Bearer '+g_token;
            $.ajax({
                type: "GET",
                url: "/admin/administrador/getHorarios",
                contentType: "application/json",
                headers:{
                    'Authorization':bearer
                }
            }).then((response) => {
                $.ajax({
                    type: "GET",
                    url: "/api/teach/asistencia/alloficina",
                    contentType: "application/json",
                    headers:{
                        'Authorization':bearer
                    }
                }).then((response1) => {
                    g_asistenciaall = response1;
                    afterbuildCalendarHorarios(response);
                    closeProgressBarLoader();
                }, (error) => {
        
                });
            }, (error) => {
    
            });
        }
        var g_horarios = new Array();
        var g_horariosMap = new Map();
        function afterbuildCalendarHorarios(data){
            var arr = new Array();
            
            data.forEach((e) => {
                g_horariosMap.set(e.id,e);
                arr.push({
                    id: e.id,
                    title: e.nombre,
                    cedula: e.cedula,
                    startRecur: moment().startOf('year').format('DD-MM-YYYY'),
                    endRecur: moment().endOf('year').format('DD-MM-YYYY'),
                    daysOfWeek: [parseInt(moment(e.fecha,"dddd, hh:mm a").format("d"))],
                    startTime: moment(e.fecha,"dddd, hh:mm a").format("HH:mm"),
                    endTime: moment(e.fecha,"dddd, hh:mm a").add(1, 'hours').format("HH:mm"),
                    duration: "01:00",
                    description: e.tipo,
                    backgroundColor: e.tipo == "Piscina" ? "#4659e4" : "#9fccff",
                    borderColor: e.tipo == "Piscina" ? "#4659e4" : "#9fccff",
                });
            });
            g_horarios = arr;
            cargarCalendario(arr);
        }
        var calendarModal;
        var calendarEvents;
        function cargarCalendario(data){
            calendarModal = document.getElementById('calendarModal');
            calendarEvents = new FullCalendar.Calendar(calendarModal, {
                timeZone: 'local',
                initialView: 'timeGridWeek',
                firstDay: 1,
                displayEventTime: false,
                locale: 'es',
                nowIndicator: true,
                allDaySlot: false,
                height:910,
                businessHours: [
                    {
                        daysOfWeek: [1, 2, 3, 4, 5, 6],
                        startTime: '06:00',
                        endTime: '22:00',
                    },
                ],
                dayHeaderFormat:{
                    weekday: 'long'
                },
                slotMinTime: "06:00:00",
                slotMaxTime: "22:00:00",
                
                slotLabelFormat: {
                    hour: 'numeric',
                    minute: '2-digit',
                    omitZeroMinute: true,
                    meridiem: false,
                    hour12: true,
                    omitCommas: true
                },
    
                hiddenDays: [ 0 ],
                themeSystem: 'bootstrap',
                headerToolbar: {
                    start: 'title',
                    center: 'prev,today,next',
                    end: 'timeGridWeek'
                },
                titleFormat:{
                    month: 'long',
                    day: 'numeric'
                },
                events: data,
                buttonText: {
                    today:    'Hoy',
                    month:    'Mes',
                    week:     'Semana',
                    day:      'Dia',
                    list:     'Lista'
                },
                viewDidMount: function() {
                    $('.fc-timeGridWeek-button').removeClass('btn-primary').addClass('btn-primary');
                },
                eventContent: function(ele, createE) {
                    let en = ele.event._def;
                    let isChecked = g_asistenciaall.find((element) => {
                        return moment(element.fecha, "DD/MM/YYYY, hh:mm a").format("DD/MM/YYYY, hh:mm a") == moment(ele.event.start).format("DD/MM/YYYY, hh:mm a")
                    });
                    // "#02CA80"
                    
                    if(isChecked){
                        ele.backgroundColor = "#02CA80";
                    }
                    var html = `
                    <div id="event-tooltip-${en.publicId}" class="position-relative px-1">
                        <div class="position-absolute" style="top: 30%; right: 5px;">
                            ${isChecked ? '<i class="fa fa-check-circle text-white"></i>' : ''}
                        </div>
                        <b>${en.title}</b><br>
                        <small>${en.extendedProps.description}</small>
                    </div>
                    `;
                    
                    return {html: html};
                },
                eventClick: function(info) {
                    let ev = info.event._def;
                    let today = moment().format("DD/MM/YYYY");
                    if(ev.extendedProps.description == "Oficina" && today == moment(info.event.start).format("DD/MM/YYYY")){
                        Swal.fire({
                            icon: 'info',
                            title: `${info.event.title}`,
                            html:`
                                Digite su numero de cedula y clave para registrar su asistencia.
                                <hr class="my-3">
                                <p class="mb-0 font-weight-bold">Cedula:</p>
                                <input type="text" id="swal-input1" class="swal2-input mt-1">
                                <p class="mb-0 font-weight-bold mt-2">Clave:</p>
                                <input type="password" id="swal-input2" class="swal2-input mt-1">
                                <hr class="my-3">
                                `,
                            focusConfirm: false,
                            preConfirm: () => {
                                return [
                                    document.getElementById('swal-input1').value,
                                    document.getElementById('swal-input2').value
                                ]
                            },
                            showDenyButton: true,
                            showCancelButton: false,
                            confirmButtonText: 'Registrar',
                            denyButtonText: `Cerrar`,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                        }).then((result) => {
                            if(result.isConfirmed){
                                if(result.value[0] == ev.extendedProps.cedula){
                                    let bearer = "Bearer " + g_token;
                                    $.ajax({
                                        type: "GET",
                                        url: "/admin/asistencia/horario/verificarUsuario",
                                        data: {
                                            cedula: result.value[0],
                                            clave: result.value[1],
                                        },
                                        contentType: "appication/json",
                                        headers: {
                                            Authorization: bearer,
                                        },
                                    }).then((response) => {
                                        if(response.status == 200){
                                            $.ajax({
                                                type: "GET",
                                                url: "/admin/asistencia/horario/registrarAsistencia",
                                                data: {
                                                    fecha: moment(info.event.start).format("DD/MM/YYYY, hh:mm a"),
                                                    usuario: response.id,
                                                },
                                                contentType: "appication/json",
                                                headers: {
                                                    Authorization: bearer,
                                                },
                                            }).then((response) => {
                                                Swal.fire({
                                                    icon: 'success',
                                                    title: 'Asistencia Registrada',
                                                    showConfirmButton: false,
                                                    timer: 1500,
                                                });
                                                setTimeout(() => {
                                                    location.reload();
                                                }, 1500);
                                            },(error) => {
                                                Swal.fire('Changes are not saved', '', 'error')
                                            });
                                        }
                                    },(error) => {
                                        Swal.fire('Changes are not saved', '', 'error')
                                    });
                                }else{
                                    Swal.fire('Las cedulas no coinciden', '', 'error')
                                }
                            }
                        })
                    }
                }
            });
            calendarEvents.render();
        }
        // document.addEventListener("DOMContentLoaded", function (event) {
        //     $("#tasksButton_navbar").on("click", (event)=>{
        //         setTimeout(() => {
        //             $(".fc-timeGridWeek-button").trigger("click");
        //             $(".fc-timeGridWeek-button").click();
        //         }, 1500);
        //     });
        // });
        document.addEventListener("DOMContentLoaded", loaderDOMEvents);
    </script>
    <style>
        
    </style>
 </body>
 </html>